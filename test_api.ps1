# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è API –≤ Windows
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: .\test_api.ps1

$BaseUrl = "http://localhost:8000"

Write-Host "üöÄ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Notes API" -ForegroundColor Green
Write-Host "=======================" -ForegroundColor Green
Write-Host ""

# 1. –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
Write-Host "1Ô∏è‚É£ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞..." -ForegroundColor Cyan
$registerBody = @{
    username = "testuser"
    password = "test123456"
} | ConvertTo-Json

$registerResponse = Invoke-RestMethod -Uri "$BaseUrl/register" `
    -Method Post `
    -ContentType "application/json" `
    -Body $registerBody `
    -ErrorAction SilentlyContinue

Write-Host "–í—ñ–¥–ø–æ–≤—ñ–¥—å:" ($registerResponse | ConvertTo-Json)
Write-Host ""

# 2. –õ–æ–≥—ñ–Ω
Write-Host "2Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è..." -ForegroundColor Cyan
$loginBody = @{
    username = "testuser"
    password = "test123456"
}

$loginResponse = Invoke-RestMethod -Uri "$BaseUrl/login" `
    -Method Post `
    -ContentType "application/x-www-form-urlencoded" `
    -Body $loginBody

$token = $loginResponse.access_token
Write-Host "–¢–æ–∫–µ–Ω –æ—Ç—Ä–∏–º–∞–Ω–æ: $($token.Substring(0, 20))..." -ForegroundColor Yellow
Write-Host ""

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑ —Ç–æ–∫–µ–Ω–æ–º
$headers = @{
    Authorization = "Bearer $token"
}

# 3. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ—Ç–∞—Ç–æ–∫
Write-Host "3Ô∏è‚É£ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ—Ç–∞—Ç–æ–∫..." -ForegroundColor Cyan
$note1Body = @{
    title = "–†–æ–±–æ—á–∞ –Ω–æ—Ç–∞—Ç–∫–∞"
    content = "–ó–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ"
    tags = @("—Ä–æ–±–æ—Ç–∞", "–≤–∞–∂–ª–∏–≤–æ")
} | ConvertTo-Json

$note1 = Invoke-RestMethod -Uri "$BaseUrl/notes" `
    -Method Post `
    -Headers $headers `
    -ContentType "application/json" `
    -Body $note1Body

Write-Host "–ù–æ—Ç–∞—Ç–∫–∞ 1 —Å—Ç–≤–æ—Ä–µ–Ω–∞: ID $($note1.id)"

$note2Body = @{
    title = "–û—Å–æ–±–∏—Å—Ç–∞ –Ω–æ—Ç–∞—Ç–∫–∞"
    content = "–ö—É–ø–∏—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∏"
    tags = @("–æ—Å–æ–±–∏—Å—Ç–µ")
} | ConvertTo-Json

$note2 = Invoke-RestMethod -Uri "$BaseUrl/notes" `
    -Method Post `
    -Headers $headers `
    -ContentType "application/json" `
    -Body $note2Body

Write-Host "–ù–æ—Ç–∞—Ç–∫–∞ 2 —Å—Ç–≤–æ—Ä–µ–Ω–∞: ID $($note2.id)"
Write-Host ""

# 4. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –Ω–æ—Ç–∞—Ç–æ–∫
Write-Host "4Ô∏è‚É£ –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –Ω–æ—Ç–∞—Ç–æ–∫..." -ForegroundColor Cyan
$notes = Invoke-RestMethod -Uri "$BaseUrl/notes" `
    -Method Get `
    -Headers $headers

Write-Host "–ó–Ω–∞–π–¥–µ–Ω–æ –Ω–æ—Ç–∞—Ç–æ–∫: $($notes.Count)"
foreach ($note in $notes) {
    Write-Host "  - $($note.title) (ID: $($note.id))"
}
Write-Host ""

# 5. –ü–æ—à—É–∫
Write-Host "5Ô∏è‚É£ –ü–æ—à—É–∫ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É '–†–æ–±–æ—á–∞'..." -ForegroundColor Cyan
$searchResults = Invoke-RestMethod -Uri "$BaseUrl/notes?search=–†–æ–±–æ—á–∞" `
    -Method Get `
    -Headers $headers

Write-Host "–ó–Ω–∞–π–¥–µ–Ω–æ: $($searchResults.Count) –Ω–æ—Ç–∞—Ç–æ–∫"
Write-Host ""

# 6. –§—ñ–ª—å—Ç—Ä –ø–æ —Ç–µ–≥—É
Write-Host "6Ô∏è‚É£ –§—ñ–ª—å—Ç—Ä –ø–æ —Ç–µ–≥—É '—Ä–æ–±–æ—Ç–∞'..." -ForegroundColor Cyan
$filterResults = Invoke-RestMethod -Uri "$BaseUrl/notes?tag=—Ä–æ–±–æ—Ç–∞" `
    -Method Get `
    -Headers $headers

Write-Host "–ó–Ω–∞–π–¥–µ–Ω–æ: $($filterResults.Count) –Ω–æ—Ç–∞—Ç–æ–∫ –∑ —Ç–µ–≥–æ–º '—Ä–æ–±–æ—Ç–∞'"
Write-Host ""

# 7. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–≥—ñ–≤
Write-Host "7Ô∏è‚É£ –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö —Ç–µ–≥—ñ–≤..." -ForegroundColor Cyan
$tags = Invoke-RestMethod -Uri "$BaseUrl/tags" `
    -Method Get `
    -Headers $headers

Write-Host "–¢–µ–≥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:"
foreach ($tag in $tags) {
    Write-Host "  - $($tag.name)"
}
Write-Host ""

# 8. –û–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ—Ç–∞—Ç–∫–∏
Write-Host "8Ô∏è‚É£ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–µ—Ä—à–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏..." -ForegroundColor Cyan
$updateBody = @{
    title = "–û–Ω–æ–≤–ª–µ–Ω–∞ —Ä–æ–±–æ—á–∞ –Ω–æ—Ç–∞—Ç–∫–∞"
    tags = @("—Ä–æ–±–æ—Ç–∞", "–≤–∞–∂–ª–∏–≤–æ", "—Ç–µ—Ä–º—ñ–Ω–æ–≤–µ")
} | ConvertTo-Json

$updated = Invoke-RestMethod -Uri "$BaseUrl/notes/1" `
    -Method Put `
    -Headers $headers `
    -ContentType "application/json" `
    -Body $updateBody

Write-Host "–ù–æ—Ç–∞—Ç–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–∞: $($updated.title)"
Write-Host ""

Write-Host "‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor Green
Write-Host ""
Write-Host "üåê –í—ñ–¥–∫—Ä–∏–π—Ç–µ Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é: $BaseUrl/docs" -ForegroundColor Yellow

